// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware/cbcontainers-operator/controllers (interfaces: AgentProcessor)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/vmware/cbcontainers-operator/api/v1"
	models "github.com/vmware/cbcontainers-operator/cbcontainers/models"
)

// MockAgentProcessor is a mock of AgentProcessor interface.
type MockAgentProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockAgentProcessorMockRecorder
}

// MockAgentProcessorMockRecorder is the mock recorder for MockAgentProcessor.
type MockAgentProcessorMockRecorder struct {
	mock *MockAgentProcessor
}

// NewMockAgentProcessor creates a new mock instance.
func NewMockAgentProcessor(ctrl *gomock.Controller) *MockAgentProcessor {
	mock := &MockAgentProcessor{ctrl: ctrl}
	mock.recorder = &MockAgentProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentProcessor) EXPECT() *MockAgentProcessorMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockAgentProcessor) Process(arg0 *v1.CBContainersAgent, arg1 string) (*models.RegistrySecretValues, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", arg0, arg1)
	ret0, _ := ret[0].(*models.RegistrySecretValues)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Process indicates an expected call of Process.
func (mr *MockAgentProcessorMockRecorder) Process(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockAgentProcessor)(nil).Process), arg0, arg1)
}
