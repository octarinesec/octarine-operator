// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware/cbcontainers-operator/controllers (interfaces: OperatorVersionProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOperatorVersionProvider is a mock of OperatorVersionProvider interface.
type MockOperatorVersionProvider struct {
	ctrl     *gomock.Controller
	recorder *MockOperatorVersionProviderMockRecorder
}

// MockOperatorVersionProviderMockRecorder is the mock recorder for MockOperatorVersionProvider.
type MockOperatorVersionProviderMockRecorder struct {
	mock *MockOperatorVersionProvider
}

// NewMockOperatorVersionProvider creates a new mock instance.
func NewMockOperatorVersionProvider(ctrl *gomock.Controller) *MockOperatorVersionProvider {
	mock := &MockOperatorVersionProvider{ctrl: ctrl}
	mock.recorder = &MockOperatorVersionProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperatorVersionProvider) EXPECT() *MockOperatorVersionProviderMockRecorder {
	return m.recorder
}

// GetOperatorVersion mocks base method.
func (m *MockOperatorVersionProvider) GetOperatorVersion() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperatorVersion")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOperatorVersion indicates an expected call of GetOperatorVersion.
func (mr *MockOperatorVersionProviderMockRecorder) GetOperatorVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperatorVersion", reflect.TypeOf((*MockOperatorVersionProvider)(nil).GetOperatorVersion))
}
