// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware/cbcontainers-operator/cbcontainers/monitor (interfaces: FeaturesStatusProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFeaturesStatusProvider is a mock of FeaturesStatusProvider interface.
type MockFeaturesStatusProvider struct {
	ctrl     *gomock.Controller
	recorder *MockFeaturesStatusProviderMockRecorder
}

// MockFeaturesStatusProviderMockRecorder is the mock recorder for MockFeaturesStatusProvider.
type MockFeaturesStatusProviderMockRecorder struct {
	mock *MockFeaturesStatusProvider
}

// NewMockFeaturesStatusProvider creates a new mock instance.
func NewMockFeaturesStatusProvider(ctrl *gomock.Controller) *MockFeaturesStatusProvider {
	mock := &MockFeaturesStatusProvider{ctrl: ctrl}
	mock.recorder = &MockFeaturesStatusProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeaturesStatusProvider) EXPECT() *MockFeaturesStatusProviderMockRecorder {
	return m.recorder
}

// HardeningEnabled mocks base method.
func (m *MockFeaturesStatusProvider) HardeningEnabled() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HardeningEnabled")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HardeningEnabled indicates an expected call of HardeningEnabled.
func (mr *MockFeaturesStatusProviderMockRecorder) HardeningEnabled() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HardeningEnabled", reflect.TypeOf((*MockFeaturesStatusProvider)(nil).HardeningEnabled))
}

// RuntimeEnabled mocks base method.
func (m *MockFeaturesStatusProvider) RuntimeEnabled() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RuntimeEnabled")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RuntimeEnabled indicates an expected call of RuntimeEnabled.
func (mr *MockFeaturesStatusProviderMockRecorder) RuntimeEnabled() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RuntimeEnabled", reflect.TypeOf((*MockFeaturesStatusProvider)(nil).RuntimeEnabled))
}
