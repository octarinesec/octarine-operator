// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware/cbcontainers-operator/cbcontainers/remote_configuration (interfaces: AccessTokenProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/vmware/cbcontainers-operator/api/v1"
)

// MockAccessTokenProvider is a mock of AccessTokenProvider interface.
type MockAccessTokenProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAccessTokenProviderMockRecorder
}

// MockAccessTokenProviderMockRecorder is the mock recorder for MockAccessTokenProvider.
type MockAccessTokenProviderMockRecorder struct {
	mock *MockAccessTokenProvider
}

// NewMockAccessTokenProvider creates a new mock instance.
func NewMockAccessTokenProvider(ctrl *gomock.Controller) *MockAccessTokenProvider {
	mock := &MockAccessTokenProvider{ctrl: ctrl}
	mock.recorder = &MockAccessTokenProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessTokenProvider) EXPECT() *MockAccessTokenProviderMockRecorder {
	return m.recorder
}

// GetCBAccessToken mocks base method.
func (m *MockAccessTokenProvider) GetCBAccessToken(arg0 context.Context, arg1 *v1.CBContainersAgent, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCBAccessToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCBAccessToken indicates an expected call of GetCBAccessToken.
func (mr *MockAccessTokenProviderMockRecorder) GetCBAccessToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCBAccessToken", reflect.TypeOf((*MockAccessTokenProvider)(nil).GetCBAccessToken), arg0, arg1, arg2)
}
