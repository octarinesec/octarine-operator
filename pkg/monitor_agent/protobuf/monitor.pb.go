// Code generated by protoc-gen-go. DO NOT EDIT.
// source: monitor.proto

package monitor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceHealthReport_Kind int32

const (
	ServiceHealthReport_DEPLOYMENT ServiceHealthReport_Kind = 0
	ServiceHealthReport_DAEMONSET  ServiceHealthReport_Kind = 1
)

var ServiceHealthReport_Kind_name = map[int32]string{
	0: "DEPLOYMENT",
	1: "DAEMONSET",
}

var ServiceHealthReport_Kind_value = map[string]int32{
	"DEPLOYMENT": 0,
	"DAEMONSET":  1,
}

func (x ServiceHealthReport_Kind) String() string {
	return proto.EnumName(ServiceHealthReport_Kind_name, int32(x))
}

func (ServiceHealthReport_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{4, 0}
}

type WebhookHealthReport_WebhookType int32

const (
	WebhookHealthReport_VALIDATING WebhookHealthReport_WebhookType = 0
	WebhookHealthReport_MUTATING   WebhookHealthReport_WebhookType = 1
)

var WebhookHealthReport_WebhookType_name = map[int32]string{
	0: "VALIDATING",
	1: "MUTATING",
}

var WebhookHealthReport_WebhookType_value = map[string]int32{
	"VALIDATING": 0,
	"MUTATING":   1,
}

func (x WebhookHealthReport_WebhookType) String() string {
	return proto.EnumName(WebhookHealthReport_WebhookType_name, int32(x))
}

func (WebhookHealthReport_WebhookType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{5, 0}
}

type ContainerSpec struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerSpec) Reset()         { *m = ContainerSpec{} }
func (m *ContainerSpec) String() string { return proto.CompactTextString(m) }
func (*ContainerSpec) ProtoMessage()    {}
func (*ContainerSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{0}
}

func (m *ContainerSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerSpec.Unmarshal(m, b)
}
func (m *ContainerSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerSpec.Marshal(b, m, deterministic)
}
func (m *ContainerSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerSpec.Merge(m, src)
}
func (m *ContainerSpec) XXX_Size() int {
	return xxx_messageInfo_ContainerSpec.Size(m)
}
func (m *ContainerSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerSpec proto.InternalMessageInfo

func (m *ContainerSpec) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type ReplicaSpec struct {
	Containers           map[string]*ContainerSpec `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ReplicaSpec) Reset()         { *m = ReplicaSpec{} }
func (m *ReplicaSpec) String() string { return proto.CompactTextString(m) }
func (*ReplicaSpec) ProtoMessage()    {}
func (*ReplicaSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{1}
}

func (m *ReplicaSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSpec.Unmarshal(m, b)
}
func (m *ReplicaSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSpec.Marshal(b, m, deterministic)
}
func (m *ReplicaSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSpec.Merge(m, src)
}
func (m *ReplicaSpec) XXX_Size() int {
	return xxx_messageInfo_ReplicaSpec.Size(m)
}
func (m *ReplicaSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSpec proto.InternalMessageInfo

func (m *ReplicaSpec) GetContainers() map[string]*ContainerSpec {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ReplicaHealth struct {
	Node                 string       `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Spec                 *ReplicaSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               []byte       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplicaHealth) Reset()         { *m = ReplicaHealth{} }
func (m *ReplicaHealth) String() string { return proto.CompactTextString(m) }
func (*ReplicaHealth) ProtoMessage()    {}
func (*ReplicaHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{2}
}

func (m *ReplicaHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaHealth.Unmarshal(m, b)
}
func (m *ReplicaHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaHealth.Marshal(b, m, deterministic)
}
func (m *ReplicaHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaHealth.Merge(m, src)
}
func (m *ReplicaHealth) XXX_Size() int {
	return xxx_messageInfo_ReplicaHealth.Size(m)
}
func (m *ReplicaHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaHealth.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaHealth proto.InternalMessageInfo

func (m *ReplicaHealth) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *ReplicaHealth) GetSpec() *ReplicaSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ReplicaHealth) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

type ServiceSpec struct {
	Replicas             int32                     `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Containers           map[string]*ContainerSpec `protobuf:"bytes,2,rep,name=containers,proto3" json:"containers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ServiceSpec) Reset()         { *m = ServiceSpec{} }
func (m *ServiceSpec) String() string { return proto.CompactTextString(m) }
func (*ServiceSpec) ProtoMessage()    {}
func (*ServiceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{3}
}

func (m *ServiceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceSpec.Unmarshal(m, b)
}
func (m *ServiceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceSpec.Marshal(b, m, deterministic)
}
func (m *ServiceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceSpec.Merge(m, src)
}
func (m *ServiceSpec) XXX_Size() int {
	return xxx_messageInfo_ServiceSpec.Size(m)
}
func (m *ServiceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceSpec proto.InternalMessageInfo

func (m *ServiceSpec) GetReplicas() int32 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *ServiceSpec) GetContainers() map[string]*ContainerSpec {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ServiceHealthReport struct {
	Kind                 ServiceHealthReport_Kind  `protobuf:"varint,1,opt,name=kind,proto3,enum=monitor.ServiceHealthReport_Kind" json:"kind,omitempty"`
	Spec                 *ServiceSpec              `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               []byte                    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Replicas             map[string]*ReplicaHealth `protobuf:"bytes,4,rep,name=replicas,proto3" json:"replicas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string         `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ServiceHealthReport) Reset()         { *m = ServiceHealthReport{} }
func (m *ServiceHealthReport) String() string { return proto.CompactTextString(m) }
func (*ServiceHealthReport) ProtoMessage()    {}
func (*ServiceHealthReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{4}
}

func (m *ServiceHealthReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceHealthReport.Unmarshal(m, b)
}
func (m *ServiceHealthReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceHealthReport.Marshal(b, m, deterministic)
}
func (m *ServiceHealthReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceHealthReport.Merge(m, src)
}
func (m *ServiceHealthReport) XXX_Size() int {
	return xxx_messageInfo_ServiceHealthReport.Size(m)
}
func (m *ServiceHealthReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceHealthReport.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceHealthReport proto.InternalMessageInfo

func (m *ServiceHealthReport) GetKind() ServiceHealthReport_Kind {
	if m != nil {
		return m.Kind
	}
	return ServiceHealthReport_DEPLOYMENT
}

func (m *ServiceHealthReport) GetSpec() *ServiceSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ServiceHealthReport) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ServiceHealthReport) GetReplicas() map[string]*ReplicaHealth {
	if m != nil {
		return m.Replicas
	}
	return nil
}

func (m *ServiceHealthReport) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type WebhookHealthReport struct {
	WebhookType          WebhookHealthReport_WebhookType `protobuf:"varint,1,opt,name=webhookType,proto3,enum=monitor.WebhookHealthReport_WebhookType" json:"webhookType,omitempty"`
	Uid                  string                          `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *WebhookHealthReport) Reset()         { *m = WebhookHealthReport{} }
func (m *WebhookHealthReport) String() string { return proto.CompactTextString(m) }
func (*WebhookHealthReport) ProtoMessage()    {}
func (*WebhookHealthReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{5}
}

func (m *WebhookHealthReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebhookHealthReport.Unmarshal(m, b)
}
func (m *WebhookHealthReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebhookHealthReport.Marshal(b, m, deterministic)
}
func (m *WebhookHealthReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebhookHealthReport.Merge(m, src)
}
func (m *WebhookHealthReport) XXX_Size() int {
	return xxx_messageInfo_WebhookHealthReport.Size(m)
}
func (m *WebhookHealthReport) XXX_DiscardUnknown() {
	xxx_messageInfo_WebhookHealthReport.DiscardUnknown(m)
}

var xxx_messageInfo_WebhookHealthReport proto.InternalMessageInfo

func (m *WebhookHealthReport) GetWebhookType() WebhookHealthReport_WebhookType {
	if m != nil {
		return m.WebhookType
	}
	return WebhookHealthReport_VALIDATING
}

func (m *WebhookHealthReport) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type HealthReport struct {
	Account              string                          `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Domain               string                          `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Webhooks             map[string]*WebhookHealthReport `protobuf:"bytes,3,rep,name=webhooks,proto3" json:"webhooks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Services             map[string]*ServiceHealthReport `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnableComponents     map[string]bool                 `protobuf:"bytes,5,rep,name=enableComponents,proto3" json:"enableComponents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Version              string                          `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *HealthReport) Reset()         { *m = HealthReport{} }
func (m *HealthReport) String() string { return proto.CompactTextString(m) }
func (*HealthReport) ProtoMessage()    {}
func (*HealthReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{6}
}

func (m *HealthReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthReport.Unmarshal(m, b)
}
func (m *HealthReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthReport.Marshal(b, m, deterministic)
}
func (m *HealthReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthReport.Merge(m, src)
}
func (m *HealthReport) XXX_Size() int {
	return xxx_messageInfo_HealthReport.Size(m)
}
func (m *HealthReport) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthReport.DiscardUnknown(m)
}

var xxx_messageInfo_HealthReport proto.InternalMessageInfo

func (m *HealthReport) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *HealthReport) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *HealthReport) GetWebhooks() map[string]*WebhookHealthReport {
	if m != nil {
		return m.Webhooks
	}
	return nil
}

func (m *HealthReport) GetServices() map[string]*ServiceHealthReport {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *HealthReport) GetEnableComponents() map[string]bool {
	if m != nil {
		return m.EnableComponents
	}
	return nil
}

func (m *HealthReport) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type HealthReportReply struct {
	Ack                  bool     `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthReportReply) Reset()         { *m = HealthReportReply{} }
func (m *HealthReportReply) String() string { return proto.CompactTextString(m) }
func (*HealthReportReply) ProtoMessage()    {}
func (*HealthReportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{7}
}

func (m *HealthReportReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthReportReply.Unmarshal(m, b)
}
func (m *HealthReportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthReportReply.Marshal(b, m, deterministic)
}
func (m *HealthReportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthReportReply.Merge(m, src)
}
func (m *HealthReportReply) XXX_Size() int {
	return xxx_messageInfo_HealthReportReply.Size(m)
}
func (m *HealthReportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthReportReply.DiscardUnknown(m)
}

var xxx_messageInfo_HealthReportReply proto.InternalMessageInfo

func (m *HealthReportReply) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func init() {
	proto.RegisterEnum("monitor.ServiceHealthReport_Kind", ServiceHealthReport_Kind_name, ServiceHealthReport_Kind_value)
	proto.RegisterEnum("monitor.WebhookHealthReport_WebhookType", WebhookHealthReport_WebhookType_name, WebhookHealthReport_WebhookType_value)
	proto.RegisterType((*ContainerSpec)(nil), "monitor.ContainerSpec")
	proto.RegisterType((*ReplicaSpec)(nil), "monitor.ReplicaSpec")
	proto.RegisterMapType((map[string]*ContainerSpec)(nil), "monitor.ReplicaSpec.ContainersEntry")
	proto.RegisterType((*ReplicaHealth)(nil), "monitor.ReplicaHealth")
	proto.RegisterType((*ServiceSpec)(nil), "monitor.ServiceSpec")
	proto.RegisterMapType((map[string]*ContainerSpec)(nil), "monitor.ServiceSpec.ContainersEntry")
	proto.RegisterType((*ServiceHealthReport)(nil), "monitor.ServiceHealthReport")
	proto.RegisterMapType((map[string]string)(nil), "monitor.ServiceHealthReport.LabelsEntry")
	proto.RegisterMapType((map[string]*ReplicaHealth)(nil), "monitor.ServiceHealthReport.ReplicasEntry")
	proto.RegisterType((*WebhookHealthReport)(nil), "monitor.WebhookHealthReport")
	proto.RegisterType((*HealthReport)(nil), "monitor.HealthReport")
	proto.RegisterMapType((map[string]bool)(nil), "monitor.HealthReport.EnableComponentsEntry")
	proto.RegisterMapType((map[string]*ServiceHealthReport)(nil), "monitor.HealthReport.ServicesEntry")
	proto.RegisterMapType((map[string]*WebhookHealthReport)(nil), "monitor.HealthReport.WebhooksEntry")
	proto.RegisterType((*HealthReportReply)(nil), "monitor.HealthReportReply")
}

func init() { proto.RegisterFile("monitor.proto", fileDescriptor_44174b7b2a306b71) }

var fileDescriptor_44174b7b2a306b71 = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x9b, 0x8f, 0xa6, 0xe3, 0xa6, 0x84, 0xed, 0x87, 0x2c, 0x8b, 0x43, 0x30, 0x54, 0xb2,
	0x28, 0xca, 0x21, 0x08, 0x09, 0xb8, 0x40, 0xd5, 0x18, 0x5a, 0x68, 0x5a, 0xe4, 0xb8, 0x54, 0x3d,
	0x6e, 0xec, 0x15, 0xb5, 0xe2, 0xec, 0x5a, 0xb6, 0x53, 0xd4, 0x7f, 0xc3, 0x99, 0x13, 0xbf, 0x82,
	0x2b, 0x7f, 0x09, 0xed, 0x7a, 0x9d, 0xae, 0x83, 0x1b, 0xd4, 0x13, 0xb7, 0x99, 0xcd, 0xcc, 0x9b,
	0x37, 0x6f, 0x5e, 0x12, 0x68, 0x4f, 0x19, 0x0d, 0x33, 0x96, 0xf4, 0xe2, 0x84, 0x65, 0x0c, 0xad,
	0xc9, 0xd4, 0xda, 0x83, 0xf6, 0x21, 0xa3, 0x19, 0x0e, 0x29, 0x49, 0x46, 0x31, 0xf1, 0xd1, 0x36,
	0x34, 0xc2, 0x29, 0xfe, 0x4a, 0x0c, 0xad, 0xab, 0xd9, 0xeb, 0x6e, 0x9e, 0x58, 0x3f, 0x34, 0xd0,
	0x5d, 0x12, 0x47, 0xa1, 0x8f, 0x45, 0xd5, 0x00, 0xc0, 0x2f, 0xda, 0x52, 0x43, 0xeb, 0xd6, 0x6c,
	0xbd, 0xff, 0xb4, 0x57, 0xcc, 0x50, 0x2a, 0x7b, 0x73, 0xf4, 0xd4, 0xa1, 0x59, 0x72, 0xe3, 0x2a,
	0x7d, 0xe6, 0x39, 0x3c, 0x58, 0xf8, 0x18, 0x75, 0xa0, 0x36, 0x21, 0x37, 0x72, 0x38, 0x0f, 0xd1,
	0x73, 0x68, 0x5c, 0xe3, 0x68, 0x46, 0x8c, 0xd5, 0xae, 0x66, 0xeb, 0xfd, 0xdd, 0xf9, 0x94, 0x12,
	0x6f, 0x37, 0x2f, 0x7a, 0xb3, 0xfa, 0x4a, 0xb3, 0x08, 0xb4, 0x25, 0x83, 0x23, 0x82, 0xa3, 0xec,
	0x0a, 0x21, 0xa8, 0x53, 0x16, 0x14, 0x2b, 0x89, 0x18, 0xd9, 0x50, 0x4f, 0x63, 0xe2, 0x4b, 0xd4,
	0xed, 0x2a, 0xee, 0xae, 0xa8, 0x40, 0xbb, 0xd0, 0x4c, 0x33, 0x9c, 0xcd, 0x52, 0xa3, 0xd6, 0xd5,
	0xec, 0x0d, 0x57, 0x66, 0xd6, 0x2f, 0x0d, 0xf4, 0x11, 0x49, 0xae, 0x43, 0x9f, 0x08, 0x4d, 0x4c,
	0x68, 0x25, 0x79, 0x73, 0x2a, 0x26, 0x35, 0xdc, 0x79, 0xbe, 0xa0, 0xd7, 0xea, 0x82, 0x5e, 0x0a,
	0xca, 0xff, 0xd0, 0xeb, 0x77, 0x0d, 0xb6, 0x24, 0x85, 0x5c, 0x30, 0x97, 0xc4, 0x2c, 0xc9, 0xd0,
	0x4b, 0xa8, 0x4f, 0x42, 0x1a, 0x08, 0xf0, 0xcd, 0xfe, 0xe3, 0x45, 0xba, 0x6a, 0x6d, 0xef, 0x53,
	0x48, 0x03, 0x57, 0x94, 0xdf, 0xa9, 0xac, 0xb2, 0xe5, 0x72, 0x65, 0xd1, 0x7b, 0x45, 0xc9, 0xba,
	0xd0, 0xea, 0xd9, 0xd2, 0xe1, 0xf2, 0x66, 0x52, 0xb1, 0x5b, 0xd5, 0xdf, 0x41, 0x33, 0xc2, 0x63,
	0x12, 0xa5, 0x46, 0x43, 0xa0, 0xd8, 0x4b, 0x51, 0x4e, 0x44, 0x69, 0x8e, 0x21, 0xfb, 0xcc, 0xd1,
	0xdc, 0x4a, 0xf7, 0xd7, 0xbb, 0xe4, 0x41, 0x45, 0x6f, 0xf3, 0x35, 0xe8, 0xca, 0xac, 0x0a, 0xc8,
	0x6d, 0x15, 0x72, 0x5d, 0x3d, 0xd5, 0x1e, 0xd4, 0xb9, 0xd2, 0x68, 0x13, 0x60, 0xe0, 0x7c, 0x3e,
	0x39, 0xbb, 0x1c, 0x3a, 0xa7, 0x5e, 0x67, 0x05, 0xb5, 0x61, 0x7d, 0x70, 0xe0, 0x0c, 0xcf, 0x4e,
	0x47, 0x8e, 0xd7, 0xd1, 0xac, 0xef, 0x1a, 0x6c, 0x5d, 0x90, 0xf1, 0x15, 0x63, 0x93, 0xd2, 0x45,
	0x3f, 0x82, 0xfe, 0x2d, 0x7f, 0xf6, 0x6e, 0x62, 0x22, 0x0f, 0x7b, 0xab, 0x4a, 0x45, 0x4b, 0xf1,
	0xc6, 0xeb, 0x5d, 0xb5, 0x99, 0xd3, 0x9e, 0x85, 0x81, 0xa4, 0xc8, 0x43, 0x6b, 0x1f, 0x74, 0xa5,
	0x9a, 0x73, 0xfc, 0x72, 0x70, 0x72, 0x3c, 0x38, 0xf0, 0x8e, 0x4f, 0x3f, 0x74, 0x56, 0xd0, 0x06,
	0xb4, 0x86, 0xe7, 0x5e, 0x9e, 0x69, 0xd6, 0xcf, 0x3a, 0x6c, 0x94, 0xb8, 0x19, 0xb0, 0x86, 0x7d,
	0x9f, 0xcd, 0x68, 0x26, 0xa5, 0x28, 0x52, 0x6e, 0x93, 0x80, 0x4d, 0x71, 0x48, 0xe5, 0x30, 0x99,
	0xa1, 0xb7, 0xd0, 0x92, 0x84, 0xb8, 0x81, 0xf8, 0x81, 0x9f, 0xcc, 0x57, 0xa9, 0xda, 0xa1, 0xf0,
	0x47, 0xd1, 0xc4, 0x01, 0xd2, 0xdc, 0x08, 0x85, 0xcf, 0xee, 0x00, 0x90, 0x76, 0x29, 0x00, 0x8a,
	0x26, 0x74, 0x01, 0x1d, 0x42, 0xf1, 0x38, 0x22, 0x87, 0x6c, 0x1a, 0x33, 0x4a, 0x68, 0x56, 0x58,
	0x6d, 0xbf, 0x1a, 0xc8, 0x59, 0xa8, 0xce, 0x01, 0xff, 0x02, 0xe1, 0x62, 0x5c, 0x93, 0x24, 0x0d,
	0x19, 0x35, 0x9a, 0xb9, 0x18, 0x32, 0x35, 0x2f, 0xa1, 0x5d, 0x5a, 0xa7, 0xc2, 0x3e, 0xfd, 0xb2,
	0x23, 0x1f, 0x2d, 0xbb, 0xaf, 0xea, 0xcb, 0x4b, 0x68, 0x97, 0x16, 0xbd, 0x0f, 0x74, 0xc5, 0x17,
	0x4a, 0x85, 0x3e, 0x84, 0x9d, 0xca, 0xd5, 0xff, 0x65, 0xfe, 0x56, 0xd9, 0xfc, 0x0f, 0x4b, 0xf8,
	0x24, 0x8e, 0x04, 0x00, 0xf6, 0x27, 0x02, 0xa0, 0xe5, 0xf2, 0xb0, 0xef, 0xc1, 0xda, 0x30, 0x67,
	0x85, 0x8e, 0x01, 0x1d, 0x61, 0x1a, 0x44, 0xe5, 0xdf, 0xb5, 0x9d, 0xca, 0xdb, 0x98, 0x66, 0xe5,
	0xb3, 0x98, 0x62, 0xad, 0x8c, 0x9b, 0xe2, 0x8f, 0xf3, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xb2, 0x31, 0xbb, 0x11, 0x49, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitorClient is the client API for Monitor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorClient interface {
	HandleHealthReport(ctx context.Context, in *HealthReport, opts ...grpc.CallOption) (*HealthReportReply, error)
}

type monitorClient struct {
	cc *grpc.ClientConn
}

func NewMonitorClient(cc *grpc.ClientConn) MonitorClient {
	return &monitorClient{cc}
}

func (c *monitorClient) HandleHealthReport(ctx context.Context, in *HealthReport, opts ...grpc.CallOption) (*HealthReportReply, error) {
	out := new(HealthReportReply)
	err := c.cc.Invoke(ctx, "/monitor.Monitor/HandleHealthReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorServer is the server API for Monitor service.
type MonitorServer interface {
	HandleHealthReport(context.Context, *HealthReport) (*HealthReportReply, error)
}

func RegisterMonitorServer(s *grpc.Server, srv MonitorServer) {
	s.RegisterService(&_Monitor_serviceDesc, srv)
}

func _Monitor_HandleHealthReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorServer).HandleHealthReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitor.Monitor/HandleHealthReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorServer).HandleHealthReport(ctx, req.(*HealthReport))
	}
	return interceptor(ctx, in, info, handler)
}

var _Monitor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitor.Monitor",
	HandlerType: (*MonitorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleHealthReport",
			Handler:    _Monitor_HandleHealthReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}
