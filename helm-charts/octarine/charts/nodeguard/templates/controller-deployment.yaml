{{- $imageTag := default .Values.global.octarine.version .Values.controller.image.tag -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodeguard.controller.fullname" . }}
  labels:
{{ include "nodeguard.controller.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nodeguard.controller.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: {{ .Values.controller.prometheus.scrape | quote }}
        prometheus.io/port: {{ .Values.controller.prometheus.port | quote }}
      labels:
        app.kubernetes.io/name: {{ include "nodeguard.controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "nodeguard.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriod }}
      priorityClassName: {{ include "octarine.priorityClass.name" . }}
      containers:
        - name: {{ include "nodeguard.controller.name" . }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.image.repository }}:{{ $imageTag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          env:
            {{ include "octarine.common.env" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "nodeguard.controller.configmap.env.fullname" . }}
            {{ include "octarine.common.envFrom" . | nindent 12 }}
          ports:
            - name: grpc
              containerPort: 50051
              protocol: TCP
            - name: probes
              containerPort: {{ .Values.controller.probes.port }}
            - name: prometheus
              containerPort: {{ .Values.controller.prometheus.port }}
          readinessProbe:
            periodSeconds: 30
            httpGet:
              path: /ready
              port: probes
          livenessProbe:
            periodSeconds: 30
            initialDelaySeconds: 5
            httpGet:
              path: /alive
              port: probes
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}