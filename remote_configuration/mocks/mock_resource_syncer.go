// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware/cbcontainers-operator/remote_configuration (interfaces: CustomResourceSyncer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/vmware/cbcontainers-operator/api/v1"
	models "github.com/vmware/cbcontainers-operator/cbcontainers/models"
	remote_configuration "github.com/vmware/cbcontainers-operator/remote_configuration"
)

// MockCustomResourceSyncer is a mock of CustomResourceSyncer interface.
type MockCustomResourceSyncer struct {
	ctrl     *gomock.Controller
	recorder *MockCustomResourceSyncerMockRecorder
}

// MockCustomResourceSyncerMockRecorder is the mock recorder for MockCustomResourceSyncer.
type MockCustomResourceSyncerMockRecorder struct {
	mock *MockCustomResourceSyncer
}

// NewMockCustomResourceSyncer creates a new mock instance.
func NewMockCustomResourceSyncer(ctrl *gomock.Controller) *MockCustomResourceSyncer {
	mock := &MockCustomResourceSyncer{ctrl: ctrl}
	mock.recorder = &MockCustomResourceSyncerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomResourceSyncer) EXPECT() *MockCustomResourceSyncerMockRecorder {
	return m.recorder
}

// ApplyChangeToCR mocks base method.
func (m *MockCustomResourceSyncer) ApplyChangeToCR(arg0 context.Context, arg1 models.ConfigurationChange, arg2 *v1.CBContainersAgent, arg3 remote_configuration.ChangeValidator) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyChangeToCR", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// ApplyChangeToCR indicates an expected call of ApplyChangeToCR.
func (mr *MockCustomResourceSyncerMockRecorder) ApplyChangeToCR(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyChangeToCR", reflect.TypeOf((*MockCustomResourceSyncer)(nil).ApplyChangeToCR), arg0, arg1, arg2, arg3)
}

// GetCR mocks base method.
func (m *MockCustomResourceSyncer) GetCR(arg0 context.Context) (*v1.CBContainersAgent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCR", arg0)
	ret0, _ := ret[0].(*v1.CBContainersAgent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCR indicates an expected call of GetCR.
func (mr *MockCustomResourceSyncerMockRecorder) GetCR(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCR", reflect.TypeOf((*MockCustomResourceSyncer)(nil).GetCR), arg0)
}
